<?xml version="1.0" encoding="UTF-8"?>
<project name="soma.js" basedir="." default="build">

	<property file="user.properties"/>
	<property file="build.properties"/>
	
	<taskdef resource="net/sf/antcontrib/antlib.xml" >
		<classpath>
			<pathelement location="libs/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>
	
	<target name="build" description="build soma" depends="minify, docs, template"/>

	<target name="minify" description="compress soma.js">
		<echo message="minify start"/>
		<echo message="source: ${build.dir.source}/${build.project.name}.js"/>
		<echo message="target: ${build.dir.min}/${build.project.fullname.min}.js"/>
		<java jar="libs/yuicompressor-2.4.7.jar" fork="true">
			<arg value="${build.dir.source}/${build.project.name}.js"/>
			<arg value="-o"/>
			<arg value="${build.dir.min}/${build.project.fullname.min}.js"/>
	    </java>
		<mapper type="glob" from="*.js" to="*-min.js"/>
		<echo message="minify complete"/>
	</target>
	
	<target name="docs" description="generate soma.js documentation">
		<echo message="doc start"/>
		<java jar="${build.docs.executable}" fork="true">
			<arg value="${build.docs.app}"/>
			<arg value="-t=${build.docs.template}"/>
			<arg value="${build.docs.source}"/>
			<arg value="-d=${build.docs.export}"/>
			<arg value="-D=noGlobal:true"/>
			<arg value="-D=title:soma.js"/>
	    </java>
		<echo message="doc complete"/>
	</target>
	
	<target name="template" description="compress soma.js">
		<echo message="template start"/>
		<echo message="copy templates"/>
		<copy todir="${build.dir.templates.temp}">
			<fileset dir="${build.dir.templates.build}"/>
		</copy>
		<for list="compact,compact-namespace,standard,standard-namespace" param="templateName">
			<sequential>
				<!--framework-->
				<echo message="    > copy framework to template '@{templateName}'"/>
				<echo>      source: ${build.dir.min}/${build.file.framework.min}</echo>
				<echo>      target: ${build.dir.templates.temp}/@{templateName}/js/libs/${build.file.framework.export}</echo>
				<copy overwrite="true" file="${build.dir.min}/${build.file.framework.min}" tofile="${build.dir.templates.temp}/@{templateName}/js/libs/${build.file.framework.export}"/>
				<!--mootools-->
				<echo message="    > copy mootools to template '@{templateName}'"/>
				<echo>      source: ${build.dir.libs}/${build.file.mootools}</echo>
				<echo>      target: ${build.dir.templates.temp}/@{templateName}/js/libs/${build.file.mootools}</echo>
				<copy overwrite="true" file="${build.dir.libs}/${build.file.mootools}" tofile="${build.dir.templates.temp}/@{templateName}/js/libs/${build.file.mootools}"/>
			</sequential>
		</for>
		<echo message="replace tokens in ${build.dir.templates.temp}"/>
		<replace dir="${build.dir.templates.temp}">
			<include name="**/*.html"/>
			<replacefilter token="${build.token.framework.path}" value="js/libs/${build.file.framework.export}"/>
			<replacefilter token="${build.token.mootools.path}" value="js/libs/${build.file.mootools}"/>
		</replace>
		<echo message="compress templates"/>
		<for list="compact,compact-namespace,standard,standard-namespace" param="templateName">
			<sequential>
				<zip destfile="${build.dir.templates.temp}/@{templateName}.zip" basedir="${build.dir.templates.temp}/@{templateName}"/>
				<copy overwrite="true" file="${build.dir.templates.temp}/@{templateName}.zip" tofile="${build.dir.templates.export}/@{templateName}.zip"/>
			</sequential>
		</for>
		<echo message="cleanup directories"/>
		<delete dir="${build.dir.templates.temp}"/>
		<echo message="template complete"/>
	</target>

</project>